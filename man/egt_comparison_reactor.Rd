% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multicpr.R
\name{egt_comparison_reactor}
\alias{egt_comparison_reactor}
\title{EnrichGT Comparison Reactor}
\usage{
egt_comparison_reactor(Type = NULL)
}
\arguments{
\item{method}{Character(1). Enrichment analysis type to compare. Must be one of:
\describe{
  \item{"ORA"}{Over-Representation Analysis}
  \item{"GSEA"}{Gene Set Enrichment Analysis}
}}
}
\value{
An R6 object of class \code{egt_comparison_reactor} with the following public methods and active bindings:

## Public Methods
\describe{
  \item{\code{append_enriched_result(result, name)}}{
    Add an enrichment result data frame to the reactor.  
    \itemize{
      \item \code{result}: a \code{data.frame} or \code{tibble} of enrichment results (must contain at least columns \code{term}, \code{p.adjust}, and any score/statistic).
      \item \code{name}: character scalar; group identifier under which to store this result.
    }
  }

  \item{\code{prefilter_by_p_adj(threshold)}}{
    Filter all stored enrichment tables so that only rows with \code{p.adjust} < \code{threshold} remain.
    \itemize{
      \item \code{threshold}: numeric scalar between 0 and 1.
    }
  }

  \item{\code{make_plans(groups = NULL)}}{
    Compute a term-by-group distance matrix and perform hierarchical clustering with complete linkage.  
    \itemize{
      \item \code{groups}: character vector of group names to include; if \code{NULL}, all appended groups are used.
    }
    The resulting dendrogram and cut assignments are stored in the active binding \code{plans}.
  }

  \item{\code{find_relationship(k)}}{
    Cut the dendrogram produced by \code{make_plans} into \code{k} clusters and return a named integer vector of cluster memberships.  
    \itemize{
      \item \code{k}: integer; number of clusters to cut into.
    }
  }
}

## Active Bindings
\describe{
  \item{\code{plans}}{A list containing:
    \itemize{
      \item \code{dists}: pairwise distance matrix
      \item \code{hclust}: the hierarchical clustering object
      \item \code{groups}: names of groups included
    }
  }

  \item{\code{clusters}}{An integer table of current cluster sizes, updated each time \code{find_relationship()} is called.}
}
}
\description{
Create and manage an EnrichGT comparison reactor object for comparing multiple enrichment results
}
\details{
This function constructs an R6-based “comparison reactor” that allows you to:
1. Append one or more enrichment results (ORA or GSEA) as named groups  
2. Pre-filter all groups by adjusted p-value  
3. Generate clustering “plans” over selected groups  
4. Find relationships among enrichment terms via k-means of the distance matrix


The comparison reactor is useful when you have multiple sets of enrichment results (e.g., from different conditions or cell types) and wish to:
- Compare enriched terms across those sets  
- Visually inspect term clustering  
- Extract consistent modules of related terms  

Under the hood, it converts each term set into a binary presence/absence matrix across groups, computes Euclidean distances, and uses complete linkage clustering.
}
\examples{
\dontrun{
# Initialize reactor for ORA results
kk <- egt_comparison_reactor("ORA")

# Append three ORA tables
kk$append_enriched_result(ora_result1, "group_1_go")
kk$append_enriched_result(ora_result2, "group_2_go")
kk$append_enriched_result(ora_result3, "group_3_go")

# Keep only terms with adj. p < 0.05
kk$prefilter_by_p_adj(0.05)

# Compute clustering plans over all groups
kk$make_plans()

# Or only over group 1 and 3
kk$make_plans(c("group_1_go", "group_3_go"))

# Cut into 6 clusters and inspect sizes
membership <- kk$find_relationship(6)
print(table(membership))
}

}
