// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// ora_analysis
DataFrame ora_analysis(std::vector<std::vector<std::string>> gene_sets, std::vector<std::string> input_genes, std::vector<std::string> background_genes);
RcppExport SEXP _EnrichGT_ora_analysis(SEXP gene_setsSEXP, SEXP input_genesSEXP, SEXP background_genesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<std::vector<std::string>> >::type gene_sets(gene_setsSEXP);
    Rcpp::traits::input_parameter< std::vector<std::string> >::type input_genes(input_genesSEXP);
    Rcpp::traits::input_parameter< std::vector<std::string> >::type background_genes(background_genesSEXP);
    rcpp_result_gen = Rcpp::wrap(ora_analysis(gene_sets, input_genes, background_genes));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_EnrichGT_ora_analysis", (DL_FUNC) &_EnrichGT_ora_analysis, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_EnrichGT(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
